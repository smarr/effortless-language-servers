{
	"name": "effortless-language-servers",
	"description": "IDE Support for SOM, SOMns, and SimpleLanguage",
	"readme": "This plugin provides support for many common IDE features.",
	"author": "Stefan Marr",
	"license": "MIT",
	"version": "0.8.1",
	"publisher": "MetaConcProject",
	"engines": {
		"vscode": "^1.74.0"
	},
	"categories": [
		"Debuggers",
		"Linters",
		"Programming Languages"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/smarr/SOMns-vscode.git"
	},
	"bugs": {
		"url": "https://github.com/smarr/SOMns-vscode/issues"
	},
	"activationEvents": [
		"onLanguage:SOMns",
		"onLanguage:SOM",
		"onLanguage:simple",
		"onCommand:extension.effortless-language-servers.runEditorContents",
		"onCommand:extension.effortless-language-servers.debugEditorContents"
	],
	"main": "./out/main",
	"icon": "resources/logo.png",
	"contributes": {
		"languages": [
			{
				"id": "SOMns",
				"extensions": [
					".ns"
				],
				"aliases": [
					"SOMns"
				],
				"configuration": "./language-configuration.json"
			},
			{
				"id": "SOM",
				"extensions": [
					".som"
				],
				"aliases": [
					"SOM"
				],
				"configuration": "./language-configuration.json"
			},
			{
				"id": "simple",
				"extensions": [
					".sl"
				],
				"aliases": [
					"simple"
				],
				"configuration": "./language-configuration.json"
			}
		],
		"grammars": [
			{
				"language": "SOMns",
				"scopeName": "source.somns",
				"path": "./syntaxes/SOMns.tmLanguage"
			},
			{
				"language": "SOM",
				"scopeName": "source.som",
				"path": "./syntaxes/som/SOM.tmbundle/Syntaxes/SOM-Smalltalk.tmLanguage"
			}
		],
		"breakpoints": [
			{
				"language": "SOMns"
			}
		],
		"configuration": {
			"title": "Effortless Language Servers Configuration",
			"properties": {
				"els.debugMode": {
					"type": "boolean",
					"default": false,
					"description": "Enables debug mode for the extension, language server, and debug adapter. This is only used to develop the SOMns extension."
				},
				"els.javaHome": {
					"type": "string",
					"default": null,
					"description": "Path to the Java 17 or later installation. On macOS, it might be /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home. On Linux perhaps /usr/lib/jvm/java-17-openjdk-amd64"
				},
				"els.somnsExecutable": {
					"type": "string",
					"default": null,
					"description": "Absolute path to the SOMns launcher to be used for debugging and executing programs."
				}
			}
		},
		"debuggers": [
			{
				"type": "SOMns",
				"label": "SOMns",
				"configurationAttributes": {
					"launch": {
						"required": [
							"program",
							"cwd",
							"runtime"
						],
						"properties": {
							"program": {
								"type": "string",
								"description": "Path to the main program"
							},
							"args": {
								"type": "array",
								"description": "Arguments to the program",
								"items": {
									"type": "string"
								}
							},
							"cwd": {
								"type": "string",
								"description": "Working directory",
								"default": "${workspaceRoot}"
							},
							"stopOnEntry": {
								"type": "boolean",
								"description": "Automatically stop after launch",
								"default": false
							},
							"runtime": {
								"type": "string",
								"description": "Path to the SOMns interpreter",
								"default": "/Users/smarr/Projects/SOM/SOMns/som"
							},
							"runtimeArgs": {
								"type": "array",
								"description": "Optional interpreter arguments",
								"items": {
									"type": "string"
								},
								"default": []
							}
						}
					},
					"attach": {
						"required": [
							"msgPort",
							"tracePort"
						],
						"properties": {
							"msgPort": {
								"type": "number",
								"description": "Debugger port of the interpreter",
								"default": 7977
							},
							"tracePort": {
								"type": "number",
								"description": "Port to receive  trace information",
								"default": 7978
							}
						}
					}
				},
				"initialConfigurations": [
					{
						"name": "Launch SOM program",
						"type": "SOMns",
						"request": "launch",
						"program": "${workspaceRoot}/Application.ns",
						"cwd": "${workspaceRoot}",
						"runtime": "PLEASE ENTER PATH TO `som` launcher",
						"stopOnEntry": false
					},
					{
						"name": "Attach to SOM program",
						"type": "SOMns",
						"request": "attach",
						"msgPort": 7977,
						"tracePort": 7978
					}
				]
			}
		],
		"menus": {
			"editor/title/run": [
				{
					"command": "extension.effortless-language-servers.runEditorContents",
					"when": "resourceLangId == SOMns",
					"group": "navigation@1"
				},
				{
					"command": "extension.effortless-language-servers.debugEditorContents",
					"when": "resourceLangId == SOMns",
					"group": "navigation@2"
				}
			],
			"commandPalette": [
				{
					"command": "extension.effortless-language-servers.debugEditorContents",
					"when": "resourceLangId == SOMns"
				},
				{
					"command": "extension.effortless-language-servers.runEditorContents",
					"when": "resourceLangId == SOMns"
				}
			]
		},
		"commands": [
			{
				"command": "extension.effortless-language-servers.debugEditorContents",
				"title": "Debug File",
				"category": "SOMns Debug",
				"enablement": "!inDebugMode",
				"icon": "$(debug-alt)"
			},
			{
				"command": "extension.effortless-language-servers.runEditorContents",
				"title": "Run File",
				"category": "SOMns Debug",
				"enablement": "!inDebugMode",
				"icon": "$(play)"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile && npm run esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
		"compile:server": "cd server && ant -e deploy",
		"pretest": "npm run compile",
		"watch": "tsc --build --watch",
		"compile": "tsc --build && cp -R test/examples out/test/",
		"prerun": "npm run compile && npm run esbuild-base -- --sourcemap",
		"postinstall": "npm run compile:server",
		"test": "node ./out/test/runTest.js",
		"create-server-shell-script": "npx run-func out/src/command-line.js getShellScript false false > out/server/start.sh; chmod +x out/server/start.sh"
	},
	"devDependencies": {
		"@types/chai": "4.3.11",
		"@types/mocha": "10.0.6",
		"@types/node": "18.11.18",
		"@types/vscode": "1.74.0",
		"@vscode/test-electron": "2.2.2",
		"chai": "4.3.10",
		"esbuild": "0.19.8",
		"mocha": "10.2.0",
		"run-func": "3.0.0",
		"typescript": "4.9.4"
	},
	"dependencies": {
		"@vscode/debugadapter": "1.55.1",
		"@vscode/debugprotocol": "1.55.1",
		"vscode-languageclient": "7.0.0",
		"vscode-languageserver-protocol": "3.16.0",
		"ws": "8.12.0"
	}
}
